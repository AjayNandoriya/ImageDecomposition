# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Test Python Package

on: [push]
  
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build flake8 pytest pytest-cov
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=150 --statistics
    - name: Test with pytest
      run: |
        pytest tests --doctest-modules --junitxml=test_results/test-results-python-3.x.xml --cov-report html:test_results/cov_html --cov=imdecomposer --html=test_results/test-results-python-3.x.html --self-contained-html
    - name: Upload pytest test results
      uses: actions/upload-artifact@v2
      with:
        name: pytest-results-python-3.x
        path: |
        test_results/
      # Use always() to always run this step to publish test results when there are test failures
      if: ${{ always() }}

